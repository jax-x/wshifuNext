{"ast":null,"code":"var _jsxFileName = \"E:\\\\my\\\\shifu-list\\\\pages\\\\seo\\\\buildTags.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nlet templateTitle = null;\n\nconst buildTags = config => {\n  const tagsToRender = [];\n\n  if (config.titleTemplate) {\n    templateTitle = config.titleTemplate;\n  }\n\n  if (config.title) {\n    let updatedTitle = config.title;\n\n    if (templateTitle) {\n      updatedTitle = templateTitle.replace(/%s/g, () => updatedTitle);\n    }\n\n    tagsToRender.push(__jsx(\"title\", {\n      key: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 23\n      }\n    }, updatedTitle));\n  }\n\n  if (config.keywords) {\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"keywords\",\n      name: \"keywords\",\n      content: config.keywords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  if (config.description) {\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"description\",\n      name: \"description\",\n      content: config.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  if (!config.noindex) {\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"robots\",\n      name: \"robots\",\n      content: \"index,follow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }\n    }));\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"googlebot\",\n      name: \"googlebot\",\n      content: \"index,follow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }\n    }));\n  } else {\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"robots\",\n      name: \"robots\",\n      content: \"noindex,nofollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }));\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"googlebot\",\n      name: \"googlebot\",\n      content: \"noindex,nofollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  if (config['X-UA-Compatible']) {\n    tagsToRender.push(__jsx(\"meta\", {\n      key: \"http-Equiv\",\n      httpEquiv: \"X-UA-Compatible\",\n      content: config['X-UA-Compatible'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  if (config.hasOwnProperty('twitter')) {\n    if (config.twitter.cardType) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"twitter:card\",\n        name: \"twitter:card\",\n        content: config.twitter.cardType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (config.twitter.site) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"twitter:site\",\n        name: \"twitter:site\",\n        content: config.twitter.site,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (config.twitter.handle) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"twitter:creator\",\n        name: \"twitter:creator\",\n        content: config.twitter.handle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  if (config.hasOwnProperty('openGraph')) {\n    if (config.openGraph.url) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"og:url\",\n        property: \"og:url\",\n        content: config.openGraph.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }));\n    }\n\n    if (config.openGraph.type) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"og:type\",\n        property: \"og:type\",\n        content: config.openGraph.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }));\n    }\n\n    if (config.openGraph.title) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"og:title\",\n        property: \"og:title\",\n        content: config.openGraph.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (config.openGraph.description) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"og:description\",\n        property: \"og:description\",\n        content: config.openGraph.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (config.openGraph.images && config.openGraph.images.length) {\n      config.openGraph.images.forEach((image, index) => {\n        tagsToRender.push(__jsx(\"meta\", {\n          key: `og:image:0${index}`,\n          property: \"og:image\",\n          content: image.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }));\n\n        if (image.alt) {\n          tagsToRender.push(__jsx(\"meta\", {\n            key: `og:image:alt0${index}`,\n            property: \"og:image:alt\",\n            content: image.alt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }\n          }));\n        }\n\n        if (image.width) {\n          tagsToRender.push(__jsx(\"meta\", {\n            key: `og:image:width0${index}`,\n            property: \"og:image:width\",\n            content: image.width,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }\n          }));\n        } else if (config.openGraph.defaultImageWidth) {\n          tagsToRender.push(__jsx(\"meta\", {\n            key: `og:image:width0${index}`,\n            property: \"og:image:width\",\n            content: config.openGraph.defaultImageWidth,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }\n          }));\n        }\n\n        if (image.height) {\n          tagsToRender.push(__jsx(\"meta\", {\n            key: `og:image:height${index}`,\n            property: \"og:image:height\",\n            content: image.height,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }\n          }));\n        } else if (config.openGraph.defaultImageHeight) {\n          tagsToRender.push(__jsx(\"meta\", {\n            key: `og:image:height${index}`,\n            property: \"og:image:height\",\n            content: config.openGraph.defaultImageHeight,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }\n          }));\n        }\n      });\n    }\n\n    if (config.openGraph.locale) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: \"og:locale\",\n        property: \"og:locale\",\n        content: config.openGraph.locale,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  if (config.canonical) {\n    tagsToRender.push(__jsx(\"link\", {\n      rel: \"canonical\",\n      href: config.canonical,\n      key: \"canonical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  for (let key in config) {\n    let val = config[key];\n    var keys = ['title', 'description', 'keywords', 'titleTemplate', 'X-UA-Compatible', 'canonical', 'noindex', 'openGraph', 'twitter', 'facebook'];\n\n    if (!keys.includes(key)) {\n      tagsToRender.push(__jsx(\"meta\", {\n        key: key,\n        name: key,\n        content: val,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }));\n    }\n  }\n\n  return tagsToRender;\n};\n\nexport default buildTags;","map":{"version":3,"sources":["E:/my/shifu-list/pages/seo/buildTags.js"],"names":["React","templateTitle","buildTags","config","tagsToRender","titleTemplate","title","updatedTitle","replace","push","keywords","description","noindex","hasOwnProperty","twitter","cardType","site","handle","openGraph","url","type","images","length","forEach","image","index","alt","width","defaultImageWidth","height","defaultImageHeight","locale","canonical","key","val","keys","includes"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nlet templateTitle = null;\r\n\r\nconst buildTags = (config) => {\r\n  const tagsToRender = [];\r\n  if (config.titleTemplate) {\r\n    templateTitle = config.titleTemplate;\r\n  }\r\n  \r\n  if (config.title) {\r\n    let updatedTitle = config.title;\r\n    if (templateTitle) {\r\n      updatedTitle = templateTitle.replace(/%s/g, () => updatedTitle);\r\n    }\r\n    tagsToRender.push(<title key=\"title\">{updatedTitle}</title>);\r\n  }\r\n\r\n  if (config.keywords) {\r\n    tagsToRender.push(<meta key=\"keywords\" name=\"keywords\" content={config.keywords} />);\r\n  }\r\n  \r\n  if (config.description) {\r\n    tagsToRender.push(<meta key=\"description\" name=\"description\" content={config.description} />);\r\n  }\r\n\r\n  if (!config.noindex) {\r\n    tagsToRender.push(<meta key=\"robots\" name=\"robots\" content=\"index,follow\" />);\r\n    tagsToRender.push(<meta key=\"googlebot\" name=\"googlebot\" content=\"index,follow\" />);\r\n  } else {\r\n    tagsToRender.push(<meta key=\"robots\" name=\"robots\" content=\"noindex,nofollow\" />);\r\n    tagsToRender.push(<meta key=\"googlebot\" name=\"googlebot\" content=\"noindex,nofollow\" />);\r\n  }\r\n\r\n  if(config['X-UA-Compatible']){\r\n    tagsToRender.push(<meta key=\"http-Equiv\" httpEquiv=\"X-UA-Compatible\" content={config['X-UA-Compatible']} />);\r\n  }\r\n  \r\n  if (config.hasOwnProperty('twitter')) {\r\n    if (config.twitter.cardType) {\r\n      tagsToRender.push(\r\n        <meta key=\"twitter:card\" name=\"twitter:card\" content={config.twitter.cardType} />,\r\n      );\r\n    }\r\n\r\n    if (config.twitter.site) {\r\n      tagsToRender.push(\r\n        <meta key=\"twitter:site\" name=\"twitter:site\" content={config.twitter.site} />,\r\n      );\r\n    }\r\n\r\n    if (config.twitter.handle) {\r\n      tagsToRender.push(\r\n        <meta key=\"twitter:creator\" name=\"twitter:creator\" content={config.twitter.handle} />,\r\n      );\r\n    }\r\n  }\r\n\r\n  if (config.hasOwnProperty('openGraph')) {\r\n    if (config.openGraph.url) {\r\n      tagsToRender.push(<meta key=\"og:url\" property=\"og:url\" content={config.openGraph.url} />);\r\n    }\r\n\r\n    if (config.openGraph.type) {\r\n      tagsToRender.push(<meta key=\"og:type\" property=\"og:type\" content={config.openGraph.type} />);\r\n    }\r\n\r\n    if (config.openGraph.title) {\r\n      tagsToRender.push(\r\n        <meta key=\"og:title\" property=\"og:title\" content={config.openGraph.title} />,\r\n      );\r\n    }\r\n\r\n    if (config.openGraph.description) {\r\n      tagsToRender.push(\r\n        <meta\r\n          key=\"og:description\"\r\n          property=\"og:description\"\r\n          content={config.openGraph.description}\r\n        />,\r\n      );\r\n    }\r\n\r\n    if (config.openGraph.images && config.openGraph.images.length) {\r\n      config.openGraph.images.forEach((image, index) => {\r\n        tagsToRender.push(\r\n          <meta key={`og:image:0${index}`} property=\"og:image\" content={image.url} />,\r\n        );\r\n\r\n        if (image.alt) {\r\n          tagsToRender.push(\r\n            <meta key={`og:image:alt0${index}`} property=\"og:image:alt\" content={image.alt} />,\r\n          );\r\n        }\r\n\r\n        if (image.width) {\r\n          tagsToRender.push(\r\n            <meta\r\n              key={`og:image:width0${index}`}\r\n              property=\"og:image:width\"\r\n              content={image.width}\r\n            />,\r\n          );\r\n        } else if (config.openGraph.defaultImageWidth) {\r\n          tagsToRender.push(\r\n            <meta\r\n              key={`og:image:width0${index}`}\r\n              property=\"og:image:width\"\r\n              content={config.openGraph.defaultImageWidth}\r\n            />,\r\n          );\r\n        }\r\n\r\n        if (image.height) {\r\n          tagsToRender.push(\r\n            <meta\r\n              key={`og:image:height${index}`}\r\n              property=\"og:image:height\"\r\n              content={image.height}\r\n            />,\r\n          );\r\n        } else if (config.openGraph.defaultImageHeight) {\r\n          tagsToRender.push(\r\n            <meta\r\n              key={`og:image:height${index}`}\r\n              property=\"og:image:height\"\r\n              content={config.openGraph.defaultImageHeight}\r\n            />,\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    if (config.openGraph.locale) {\r\n      tagsToRender.push(\r\n        <meta key=\"og:locale\" property=\"og:locale\" content={config.openGraph.locale} />,\r\n      );\r\n    }\r\n  }\r\n\r\n  if (config.canonical) {\r\n    tagsToRender.push(<link rel=\"canonical\" href={config.canonical} key=\"canonical\" />);\r\n  }\r\n  \r\n  for(let key in config){\r\n    let val = config[key];\r\n    var keys = ['title', 'description', 'keywords', 'titleTemplate', 'X-UA-Compatible', 'canonical', 'noindex', 'openGraph', 'twitter', 'facebook'];\r\n    if(!keys.includes(key)){\r\n      tagsToRender.push(<meta key={key} name={key} content={val} />);\r\n    }\r\n  }\r\n  return tagsToRender;\r\n};\r\n\r\nexport default buildTags;\r\n"]},"metadata":{},"sourceType":"module"}